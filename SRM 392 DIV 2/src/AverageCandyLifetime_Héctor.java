
import java.util.*;

public class AverageCandyLifetime_Héctor {

	public double getAverage(int[] eatenCandies) {
		int meses[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
		double can = 0;
		double can1 = 0;
		int a[] = new int[12];
		a[0] = 31;
		for (int i = 1; i < eatenCandies.length; i++) {
			a[i] = a[i - 1] + meses[i];
			can += a[i - 1] * eatenCandies[i - 1];
			can1 += eatenCandies[i - 1];
		}
		can1 += eatenCandies[11];
		can += a[11] * eatenCandies[11];
		System.out.println(can1);
		System.out.println(Arrays.toString(a));
		can = can / (can1);
		return can;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0,
			boolean hasAnswer, double p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}");
		System.out.println("]");
		AverageCandyLifetime_Héctor obj;
		double answer;
		obj = new AverageCandyLifetime_Héctor();
		long startTime = System.currentTimeMillis();
		answer = obj.getAverage(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0
				+ " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = Math.abs(p1 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p1));
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		double p1;

		// ----- test 0 -----
		p0 = new int[] { 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		p1 = 60.5D;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 0, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		p1 = 59.0D;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 0, 0, 0, 0, 0, 1, 0, 0, 0, 50, 0, 0 };
		p1 = 301.5882352941176D;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
		p1 = 252.80769230769232D;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------

		if (all_right) {
			System.out
					.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!