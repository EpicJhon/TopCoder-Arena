public class GridGenerator_Héctor {

	public int generate(int[] row, int[] col) {
		int rc[][] = new int[row.length][col.length];
		for (int i = 0; i < rc.length; i++) {
			rc[0][i] = row[i];
			rc[i][0] = col[i];
		}
		int fin = 0;
		for (int i = 1; i < rc.length; i++) {
			for (int j = 1; j < rc.length; j++) {
				rc[i][j] = rc[i - 1][j - 1] + rc[i - 1][j] + rc[i][j - 1];
				fin = rc[i][j];
			}
		}
		return fin;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1,
			boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		GridGenerator_Héctor obj;
		int answer;
		obj = new GridGenerator_Héctor();
		long startTime = System.currentTimeMillis();
		answer = obj.generate(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0
				+ " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = new int[] { 1, 0, 3, 4, 1 };
		p1 = new int[] { 1, 4, 1, 0, 3 };
		p2 = 579;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 };
		p1 = new int[] { 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 };
		p2 = 13163067;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		p1 = new int[] { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		if (all_right) {
			System.out
					.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
// Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!